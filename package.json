{
	"name": "mind-reader",
	"displayName": "Mind Reader",
	"homepage": "https://github.com/We-Dont-Byte/Mind_Reader/wiki",
	"repository": {
		"type": "git",
		"url": "https://github.com/We-Dont-Byte/Mind_Reader"
	},
	"bugs": {
		"type": "git",
		"url": "https://github.com/We-Dont-Byte/Mind_Reader/issues"
	},
	"contributors": [
		{
			"name" : "Jake Grossman",
			"email" : "JacobGrossman2@my.unt.edu"
		},
		{
			"name" : "Cal Wooten",
			"email" : "calwooten@my.unt.edu"
		},
		{
			"name" : "Josiah Mosesn",
			"email" : "josiahmoses@my.unt.edu"
		},
		{
			"name" : "Sophia Drewfs",
			"email" : "sophiadrewfs@my.unt.edu"
		},
		{
			"name" : "John Breaux",
			"email" : "JohnBreaux@my.unt.edu"
		},
		{
			"name" : "Thomas Lane",
			"email" : "ThomasLane2@my.unt.edu"
		},
		{
			"name" : "Ryan Tolbert",
			"email" : "RyanTolbert@my.unt.edu"
		},
		{
			"name" : "Kendrick Johnson",
			"email" : "KendrickJohnson@my.unt.edu"
		},
		{
			"name" : "Pedro Alvarez",
			"email" : "PedroAlvarez3@my.unt.edu"
		}
	],
	"version": "2.0.0",
	"engines": {
		"vscode": "^1.60.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [{
				"command": "mind-reader.increaseFontScale",
				"title": "Increase Font Scale"
			},
			{
				"command": "mind-reader.decreaseFontScale",
				"title": "Decrease Font Scale"
			},
			{
				"command": "mind-reader.resetFontScale",
				"title": "Reset Font Scale"
			},
			{
				"command": "mind-reader.increaseEditorScale",
				"title": "Increase Editor Scale"
			},
			{
				"command": "mind-reader.decreaseEditorScale",
				"title": "Decrease Editor Scale"
			},
			{
				"command": "mind-reader.resetEditorScale",
				"title": "Reset Editor Scale"
			},
			{
				"command": "mind-reader.selectTheme",
				"title": "Select Theme"
			},
			{
				"command": "mind-reader.openWebview",
				"title": "Mind Reader Webview"
			},
			{
				"command": "mind-reader.openKeyBindWin",
				"title": "Key Bindings for Windows"
			},
			{
				"command": "mind-reader.openKeyBindMac",
				"title": "Key Bindings for Mac"
			},
			{
				"command": "mind-reader.runLineContext",
				"title": "Run Line Context"
			},
			{
				"command": "mind-reader.runCursorContext",
				"title": "Run Cursor Context"
			},
			{
				"command": "mind-reader.getLineNumber",
				"title": "Get The Current Line Number"
			},
			{
				"command": "mind-reader.getIndent",
				"title": "Get The Number Of Line Indentation"
			},
			{
				"command": "mind-reader.getLeadingSpaces",
				"title": "Get The Number Of Leading Spaces"
			},
			{
				"command": "mind-reader.selectLeadingWhitespace",
				"title": "Select The Leading Whitespace"
			},
			{
				"command": "mind-reader.getNumberOfSelectedLines",
				"title": "Get The Number Of Selected Lines"
			},
			{
				"command": "mind-reader.connectHub",
				"title": "Connect LEGO Hub"
			},
			{
				"command": "mind-reader.disconnectHub",
				"title": "Disconnect LEGO Hub"
			},
			{
				"command": "mind-reader.uploadCurrentFile",
				"title": "Upload current file to LEGO Hub"
			},
			{
				"command": "mind-reader.runProgram",
				"title": "Run a program from the LEGO Hub"
			},
			{
				"command": "mind-reader.stopExecution",
				"title": "Stop running program on the LEGO Hub"
			},
			{
				"command": "mind-reader.deleteProgram",
				"title": "Delete a program from the LEGO Hub"
			}
		],
		"keybindings": [
			{
				"command": "mind-reader.selectTheme",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.decreaseFontScale",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.increaseFontScale",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.increaseEditorScale",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.decreaseEditorScale",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.resetEditorScale",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.showAllSymbols",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.gotoLine",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.quickOpen",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.gotoSymbol",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.showProblems",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.nextInFiles",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.prevInFiles",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.quickOpenPreviousRecentlyUsedEditorInGroup",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.navigateBack",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.getQuickInputBack",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.navigateForward",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.getLineNumber",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.getIndent",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.getLeadingSpaces",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.selectLeadingWhitespace",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.getNumberOfSelectedLines",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.openKeyBindWin",
				"key": "",
				"mac": ""
			},
			{
				"command": "mind-reader.openKeyBindMac",
				"key": "",
				"mac": ""
			}
		],
		"menus": {
			"editor/context": [{
				"submenu": "mind-reader.editor.context",
				"group": "mind-reader"
			}],
			"mind-reader.editor.context": [
				{
					"command": "mind-reader.selectTheme",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.increaseFontScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.decreaseFontScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.resetFontScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.increaseEditorScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.decreaseEditorScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.resetEditorScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.getLineNumber",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.getIndent",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.getLeadingSpaces",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.selectLeadingWhitespace",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.getNumberOfSelectedLines",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.openWebview",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.openKeyBindWin",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.openKeyBindMac",
					"group": "mind-reader",
					"when": "activeEditor"
				}
			]
		},
		"submenus": [{
			"id": "mind-reader.editor.context",
			"label": "Mind Reader"
		}],
		"configuration": [{
			"title": "Mind Reader",
			"order": 0,
			"properties": {
				"mind-reader.productType": {
					"order": 1,
					"type": "string",
					"description": "Specifies the LEGO® product.",
					"default": "MINDSTORMS EV3",
					"enum": [
						"MINDSTORMS EV3",
						"SPIKE Prime"
					],
					"enumDescriptions": [
						"LEGO® MINDSTORMS® EV3 (31313)",
						"LEGO® Education SPIKE™ Prime Set (45678)"
					]
				},
				"mind-reader.reader.screenReader": {
					"order": 0,
					"type": "string",
					"description": "Specifies which screen reader to optimize for.",
					"default": "NVDA",
					"enum": [
						"NVDA",
						"Orca",
						"VoiceOver"
					],
					"enumDescriptions": [
						"NonVisual Desktop Access (Windows)",
						"Orca (Linux)",
						"Apple VoiceOver (macOS)"
					]
				},
				"mind-reader.reader.contextWindow": {
					"order": 3,
					"type": "number",
					"description": "The number of words around the cursor to use when reading the cursor context",
					"default": 1
				},
				"mind-reader.connection.portPath": {
					"order": 2,
					"type": "string",
					"markdownDescription": "The default port to try and establish a connection on."
				}
			}
		},
		{
			"title": "Line Highlighter [Must Close Settings And RESTART VSCode For The Line Highlighter To Function]",
			"order": 1,
			"properties": {
				"mind-reader.lineHighlighter.isEnabled": {
					"order": 4,
					"type": "boolean",
					"markdownDescription": "Enable/Disable the line highlighter.\n\n\n* `Enabled (our default)`: Checked: Line Highlighter is turned `ON`\n* `Disabled`: Unchecked: Line Highlighter is turned `OFF`\n\n### `NOTE`: You Must Close Settings And RESTART Visual Studio Code For The Line Highlighter To Function\n#### Even If No Changes Were Made",
					"default": true
				},
				"mind-reader.lineHighlighter.multiLineIsEnabled": {
					"order": 5,
					"type": "boolean",
					"markdownDescription": "Temporarily Disable highlighting when highlighting multiple lines.\n\n\n* `Enabled`: Checked: Multiline Highlighting is turned `ON`:\n* * When you click and drag line highlights will be applied to all lines\n* `Disabled (our default)`: Unchecked: Multiline Highlighting is turned `OFF`:\n* * When you click and drag the line highlighter will disable itself then re-enable itself when you click onto a single line.",
					"default": false
				},
				"mind-reader.lineHighlighter.backgroundColor": {
					"order": 6,
					"type": "string",
					"markdownDescription": "Set the background color to be used by the line highlighter.\n\nSyntax: _color_ or `transparent`\n\nAvailable color formats include:\n* `HEX(A)`: for Hexadecimal Colors: `#RRGGBB` or `#RRGGBBAA` to add transparency\n* `RGB(A)`: for RGB Colors: `rgb(red, green, blue)` or `rgba(red, green, blue, alpha)`\n* `HSL(A)`: for HSL Colors: `hsl(hue, saturation, lightness)` or `hsla(hue, saturation, lightness, alpha)`\n* `Predefined Color Names`: 140 color names are predefined in the HTML and CSS color specification: `blue`, `red`, `coral`, `brown`, [etc...](https://www.w3schools.com/colors/colors_names.asp)\n* `None`: For no color to be applied: Sometimes VSCode will pull a color from your theme, other times it uses black\n* `#232C5C` is our default",
					"default": "#232C5C"
				},
				"mind-reader.lineHighlighter.outlineColor": {
					"order": 7,
					"type": "string",
					"markdownDescription": "Set the outline color to be used by the line highlighter.\n\nSyntax: _color_ or `transparent`\n\nAvailable color formats include:\n* `HEX(A)`: for Hexadecimal Colors: `#RRGGBB` or `#RRGGBBAA` to add transparency\n* `RGB(A)`: for RGB Colors: `rgb(red, green, blue)` or `rgba(red, green, blue, alpha)`\n* `HSL(A)`: for HSL Colors: `hsl(hue, saturation, lightness)` or `hsla(hue, saturation, lightness, alpha)`\n* `Predefined Color Names`: 140 color names are predefined in the HTML and CSS color specification: `blue`, `red`, `coral`, `brown`, [etc...](https://www.w3schools.com/colors/colors_names.asp)\n* `None`: For no color to be applied: Sometimes VSCode will pull a color from your theme, other times it uses black\n* `#4866FE` is our default",
					"default": "#4866FE"
				},
				"mind-reader.lineHighlighter.outlineWidth": {
					"order": 8,
					"type": "string",
					"markdownDescription": "Set the outline width to be used by the line highlighter.\n\nSyntax: `medium` or `thin` or `thick` or `length` or `none`\n* `medium`: Specifies a medium outline. (usual default)\n* `thin`: Specifies a thin outline\n* `thick`: Specifies a thick outline\n* `length`: you to define the thickness of the outline in [length](https://www.w3schools.com/cssref/css_units.asp) units.\n* `none`: No outline width will be applied\n* `1px` is our default",
					"default": "1px"
				},
				"mind-reader.lineHighlighter.outlineStyle": {
					"order": 9,
					"type": "string",
					"markdownDescription": "Set the outline style to be used by the line highlighter.\n\nSyntax: `none` or `hidden` or `dotted` or `dashed` or `solid` or `double` or `groove` or `ridge` or `inset` or `outset`\n* `none`: No border will be applied (usual default)\n* `hidden`: The same as `none`\n* `dotted`: Dotted border\n* `dashed`: Dashed border\n* `solid (our default)`: Solid border\n* `double`: Double border\n* `groove`: 3D grooved border, depends on the outline-color value.\n* `ridge`: 3D ridged border, depends on the outline-color value.\n* `inset`: 3D inset border, depends on the outline-color value.\n* `outset`: 3D outset border, depends on the outline-color value.",
					"default": "solid"
				},
				"mind-reader.lineHighlighter.borderColorTop": {
					"order": 10,
					"type": "string",
					"markdownDescription": "Set the top border color to be used by the line highlighter.\n\nSyntax: _color_ or `transparent`\n\nAvailable color formats include:\n* `HEX(A)`: for Hexadecimal Colors: `#RRGGBB` or `#RRGGBBAA` to add transparency\n* `RGB(A)`: for RGB Colors: `rgb(red, green, blue)` or `rgba(red, green, blue, alpha)`\n* `HSL(A)`: for HSL Colors: `hsl(hue, saturation, lightness)` or `hsla(hue, saturation, lightness, alpha)`\n* `Predefined Color Names`: 140 color names are predefined in the HTML and CSS color specification: `blue`, `red`, `coral`, `brown`, [etc...](https://www.w3schools.com/colors/colors_names.asp)\n* `None`: For no color to be applied: Sometimes VSCode will pull a color from your theme, other times it uses black\n* `#FFFFFF` is our default",
					"default": "#FFFFFF"
				},
				"mind-reader.lineHighlighter.borderColorRight": {
					"order": 11,
					"type": "string",
					"markdownDescription": "Set the right border color to be used by the line highlighter.\n\nSyntax: _color_ or `transparent`\n\nAvailable color formats include:\n* `HEX(A)`: for Hexadecimal Colors: `#RRGGBB` or `#RRGGBBAA` to add transparency\n* `RGB(A)`: for RGB Colors: `rgb(red, green, blue)` or `rgba(red, green, blue, alpha)`\n* `HSL(A)`: for HSL Colors: `hsl(hue, saturation, lightness)` or `hsla(hue, saturation, lightness, alpha)`\n* `Predefined Color Names`: 140 color names are predefined in the HTML and CSS color specification: `blue`, `red`, `coral`, `brown`, [etc...](https://www.w3schools.com/colors/colors_names.asp)\n* `None`: For no color to be applied: Sometimes VSCode will pull a color from your theme, other times it uses black\n* `#FFFFFF` is our default",
					"default": "#FFFFFF"
				},
				"mind-reader.lineHighlighter.borderColorBottom": {
					"order": 12,
					"type": "string",
					"markdownDescription": "Set the bottom border color to be used by the line highlighter.\n\nSyntax: _color_ or `transparent`\n\nAvailable color formats include:\n* `HEX(A)`: for Hexadecimal Colors: `#RRGGBB` or `#RRGGBBAA` to add transparency\n* `RGB(A)`: for RGB Colors: `rgb(red, green, blue)` or `rgba(red, green, blue, alpha)`\n* `HSL(A)`: for HSL Colors: `hsl(hue, saturation, lightness)` or `hsla(hue, saturation, lightness, alpha)`\n* `Predefined Color Names`: 140 color names are predefined in the HTML and CSS color specification: `blue`, `red`, `coral`, `brown`, [etc...](https://www.w3schools.com/colors/colors_names.asp)\n* `None`: For no color to be applied: Sometimes VSCode will pull a color from your theme, other times it uses black\n* `#FFFFFF` is our default",
					"default": "#FFFFFF"
				},
				"mind-reader.lineHighlighter.borderColorLeft": {
					"order": 13,
					"type": "string",
					"markdownDescription": "Set the left border color to be used by the line highlighter.\n\nSyntax: _color_ or `transparent`\n\nAvailable color formats include:\n* `HEX(A)`: for Hexadecimal Colors: `#RRGGBB` or `#RRGGBBAA` to add transparency\n* `RGB(A)`: for RGB Colors: `rgb(red, green, blue)` or `rgba(red, green, blue, alpha)`\n* `HSL(A)`: for HSL Colors: `hsl(hue, saturation, lightness)` or `hsla(hue, saturation, lightness, alpha)`\n* `Predefined Color Names`: 140 color names are predefined in the HTML and CSS color specification: `blue`, `red`, `coral`, `brown`, [etc...](https://www.w3schools.com/colors/colors_names.asp)\n* `None`: For no color to be applied: Sometimes VSCode will pull a color from your theme, other times it uses black\n* `#FFFFFF` is our default",
					"default": "#FFFFFF"
				},
				"mind-reader.lineHighlighter.borderWidthTop": {
					"order": 14,
					"type": "string",
					"markdownDescription": "Set the top border width to be used by the line highlighter.\n\nSyntax: `medium` or `thin` or `thick` or `length` or `none`\n* `medium`: Specifies a medium border. (usual default)\n* `thin`: Specifies a thin border\n* `thick`: Specifies a thick border\n* `length`: you to define the thickness of the border in [length](https://www.w3schools.com/cssref/css_units.asp) units.\n* `none`: No border width will be applied\n* `1px` is our default",
					"default": "1px"
				},
				"mind-reader.lineHighlighter.borderWidthRight": {
					"order": 15,
					"type": "string",
					"markdownDescription": "Set the right border width to be used by the line highlighter.\n\nSyntax: `medium` or `thin` or `thick` or `length` or `none`\n* `medium`: Specifies a medium border. (usual default)\n* `thin`: Specifies a thin border\n* `thick`: Specifies a thick border\n* `length`: you to define the thickness of the border in [length](https://www.w3schools.com/cssref/css_units.asp) units.\n* `none`: No border width will be applied\n* `16px` is our default\n\n#### \nborderWidthRight exhibits odd behavior, play around with different sizes to find what works best for your environment.",
					"default": "16px"
				},
				"mind-reader.lineHighlighter.borderWidthBottom": {
					"order": 16,
					"type": "string",
					"markdownDescription": "Set the bottom border width to be used by the line highlighter.\n\nSyntax: `medium` or `thin` or `thick` or `length` or `none`\n* `medium`: Specifies a medium border. (usual default)\n* `thin`: Specifies a thin border\n* `thick`: Specifies a thick border\n* `length`: you to define the thickness of the border in [length](https://www.w3schools.com/cssref/css_units.asp) units.\n* `none`: No border width will be applied\n* `1px` is our default",
					"default": "1px"
				},
				"mind-reader.lineHighlighter.borderWidthLeft": {
					"order": 17,
					"type": "string",
					"markdownDescription": "Set the left border width to be used by the line highlighter.\n\nSyntax: `medium` or `thin` or `thick` or `length` or `none`\n* `medium`: Specifies a medium border. (usual default)\n* `thin`: Specifies a thin border\n* `thick`: Specifies a thick border\n* `length`: you to define the thickness of the border in [length](https://www.w3schools.com/cssref/css_units.asp) units.\n* `none`: No border width will be applied\n* `1px` is our default",
					"default": "1px"
				},
				"mind-reader.lineHighlighter.borderStyleTop": {
					"order": 18,
					"type": "string",
					"markdownDescription": "Set the top border style to be used by the line highlighter.\n\nSyntax: `none` or `hidden` or `dotted` or `dashed` or `solid` or `double` or `groove` or `ridge` or `inset` or `outset`\n* `none`: No border will be applied (usual default)\n* `hidden`: The same as `none`\n* `dotted`: Dotted border\n* `dashed`: Dashed border\n* `solid (our default)`: Solid border\n* `double`: Double border\n* `groove`: 3D grooved border, depends on the border-color value.\n* `ridge`: 3D ridged border, depends on the border-color value.\n* `inset`: 3D inset border, depends on the border-color value.\n* `outset`: 3D outset border, depends on the border-color value.",
					"default": "solid"
				},
				"mind-reader.lineHighlighter.borderStyleRight": {
					"order": 19,
					"type": "string",
					"markdownDescription": "Set the right border style to be used by the line highlighter.\n\nSyntax: `none` or `hidden` or `dotted` or `dashed` or `solid` or `double` or `groove` or `ridge` or `inset` or `outset`\n* `none`: No border will be applied (usual default)\n* `hidden`: The same as `none`\n* `dotted`: Dotted border\n* `dashed`: Dashed border\n* `solid (our default)`: Solid border\n* `double`: Double border\n* `groove`: 3D grooved border, depends on the border-color value.\n* `ridge`: 3D ridged border, depends on the border-color value.\n* `inset`: 3D inset border, depends on the border-color value.\n* `outset`: 3D outset border, depends on the border-color value.",
					"default": "solid"
				},
				"mind-reader.lineHighlighter.borderStyleBottom": {
					"order": 20,
					"type": "string",
					"markdownDescription": "Set the bottom border style to be used by the line highlighter.\n\nSyntax: `none` or `hidden` or `dotted` or `dashed` or `solid` or `double` or `groove` or `ridge` or `inset` or `outset`\n* `none`: No border will be applied (usual default)\n* `hidden`: The same as `none`\n* `dotted`: Dotted border\n* `dashed`: Dashed border\n* `solid (our default)`: Solid border\n* `double`: Double border\n* `groove`: 3D grooved border, depends on the border-color value.\n* `ridge`: 3D ridged border, depends on the border-color value.\n* `inset`: 3D inset border, depends on the border-color value.\n* `outset`: 3D outset border, depends on the border-color value.",
					"default": "solid"
				},
				"mind-reader.lineHighlighter.borderStyleLeft": {
					"order": 21,
					"type": "string",
					"markdownDescription": "Set the left border style to be used by the line highlighter.\n\nSyntax: `none` or `hidden` or `dotted` or `dashed` or `solid` or `double` or `groove` or `ridge` or `inset` or `outset`\n* `none`: No border will be applied (usual default)\n* `hidden`: The same as `none`\n* `dotted`: Dotted border\n* `dashed`: Dashed border\n* `solid (our default)`: Solid border\n* `double`: Double border\n* `groove`: 3D grooved border, depends on the border-color value.\n* `ridge`: 3D ridged border, depends on the border-color value.\n* `inset`: 3D inset border, depends on the border-color value.\n* `outset`: 3D outset border, depends on the border-color value.",
					"default": "solid"
				},
				"mind-reader.lineHighlighter.fontStyle": {
					"order": 22,
					"type": "string",
					"markdownDescription": "Set the font style to be used by the line highlighter.\n\nSyntax: `normal` or `italic` or `oblique` or `none`\n* `normal (our default)`: Displays a normal font style. This is default\n* `italic`: Displays an italic font style\n* `oblique`: Displays an oblique font style\n* `none`: No font style will be applied",
					"default": "normal"
				},
				"mind-reader.lineHighlighter.fontWeight": {
					"order": 23,
					"type": "string",
					"markdownDescription": "Set the font weight to be used by the line highlighter.\n\nSyntax: `normal` or `bold` or `bolder` or `lighter` or _number_ or `none`\n* `normal`: Normal Characters. (usual default)\n* `bold`: Thick Characters\n* `bolder (our default)`: Thicker Characters\n* `lighter`: Lighter Characters\n * _number_: From `thin` to `thick` characters: `100`, `200`, `300`, `400`, `500`, `600`, `700`, `800`, or `900`: `400` is the same as normal, and `700` is the same as bold.\n* `none`: No font weight will be applied",
					"default": "bolder"
				},
				"mind-reader.lineHighlighter.textDecoration": {
					"order": 24,
					"type": "string",
					"markdownDescription": "Set the text decoration to be used by the line highlighter.\n\nSyntax: `(text-decoration-line)` `(text-decoration-color)` `(text-decoration-style)` `(text-decoration-thickness)`\n* `text-decoration-line (required)`: Sets the kind of text decoration to use: `underline`, `overline`, `line-through`\n* `text-decoration-color`: Sets the color of the text decoration\n* `text-decoration-style`: Sets the style of the text decoration: `solid`, `wavy`, `dotted`, `dashed`, `double`\n* `text-decoration-thickness`: Sets the thickness of the decoration line\n* `none (our default)`: No text decorations will be applied\n\n`Examples`:\n1. underline blue wavy 5px\n2. line-through\n3. underline overline dotted red",
					"default": "none"
				},
				"mind-reader.lineHighlighter.textColor": {
					"order": 25,
					"type": "string",
					"markdownDescription": "Set the text color to be used by the line highlighter.\n\nSyntax: _color_ or `transparent`\n\nAvailable color formats include:\n* `HEX(A)`: for Hexadecimal Colors: `#RRGGBB` or `#RRGGBBAA` to add transparency\n* `RGB(A)`: for RGB Colors: `rgb(red, green, blue)` or `rgba(red, green, blue, alpha)`\n* `HSL(A)`: for HSL Colors: `hsl(hue, saturation, lightness)` or `hsla(hue, saturation, lightness, alpha)`\n* `Predefined Color Names`: 140 color names are predefined in the HTML and CSS color specification: `blue`, `red`, `coral`, `brown`, [etc...](https://www.w3schools.com/colors/colors_names.asp)\n* `None`: For no color to be applied: Sometimes VSCode will pull a color from your theme, other times it uses black\n* `#FFFFFF` is our default",
					"default": "#FFFFFF"
				}
			}
		}],
		"views": {
			"MindReader": [{
					"id": "accessActions",
					"name": "Access Actions",
					"icon": "media/dep.svg",
					"contextualTitle": "Accessibility Menu Actions"
				},
				{
					"id": "hubActions",
					"name": "Hub Actions",
					"icon": "media/dep.svg",
					"contextualTitle": "Hub Connection Actions"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [{
				"id": "MindReader",
				"title": "MindReader Actions",
				"icon": "media/dep.svg"
			}]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.2",
		"@types/node": "16.x",
		"@types/serialport": "^8.0.2",
		"@types/vscode": "^1.60.0",
		"@typescript-eslint/eslint-plugin": "^4.26.0",
		"@typescript-eslint/parser": "^4.26.0",
		"@vscode/test-electron": "^1.6.2",
		"eslint": "^7.27.0",
		"glob": "^7.1.7",
		"mocha": "^8.4.0",
		"typescript": "^4.3.2",
		"vscode-test": "^1.5.2"
	},
	"dependencies": {
		"serialport": "^9.2.5"
	}
}
